{
	/*
	 // Place your snippets for Python here. Each snippet is defined under a snippet name and has a prefix, body and 
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, ${id} and ${id:label} and ${1:label} for variables. Variables with the same id are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"Odoo Import": {
		"prefix": "odoo_import",
		"body": [
			"from odoo import api, fields, models, tools, SUPERUSER_ID, _",
			"from odoo.exceptions import UserError, ValidationError"
		],
		"description": "Odoo ORM Standard Import"
	},
	
	"Odoo Raise": {
		"prefix": "odoo_raise",
		"body": [
			"raise ValidationError('${Error Message}')"
		],
		"description": "Odoo ORM Raise Method"
	},
	
	"Odoo Class": {
		"prefix": "odoo_class",
		"body": [
			"class ${class_name}(models.Model):",
			"    _name = '${model_name}'",
			"    _description = '${model_description}'",
			"",
			"    name = fields.${type}(",
			"        string = '${string}',",
			"    )"
		],
		"description": "Odoo ORM Class"
	},
	

	"Odoo Class Inherit Definition": {
		"prefix": "odoo_class_inherit",
		"body": [
			"class ${class_name}(models.Model):",
			"    _inherit = '${parent_module_name}'",
			"",
			"    ${field_name} = fields.${type}(",
			"        string = '${string}',",
			"    )"
		],
		"description": "Odoo Class Inherit Definition"
	},
	
	"Odoo Class Name and Inherit Definition": {
		"prefix": "odoo_class_name_inherit",
		"body": [
			"class ${class_name}(models.Model):",
			"    _inherit = '${parent_module_name}'",
			"    _name = '${module_name}'",
			"",
			"    ${field_name} = fields.${type}(",
			"        string = '${string}',",
			"    )"
		],
		"description": "Odoo Class Name and Inherit Definition"
	},
	
	"Odoo Fields.Datetime field Definition": {
		"prefix": "fields.Datetime",
		"body": [
				"fields.Datetime(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=fields.Datetime.now(),",
				"    help=${5:False},",
				")"
		],
		"description": "Odoo ORM Datetime Definiton"
	},

	"Odoo Fields.Date field Definition": {
		"prefix": "fields.Date",
		"body": [
				"fields.Datet(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=fields.Datet.today(),",
				"    help=${5:False},",
				")"
		],
		"description": "Odoo ORM Datet Definiton"
	},

	"Odoo Character field Definition": {
		"prefix": "fields.Char",
		"body": [
				"fields.Char(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:None},",
				"    help=${6:False},",
				"    size=${7:50},",
				"    translate=${8:True},",
				")"
		],
		"description": "Odoo ORM Character Definiton"
	},
	
	"Odoo Fields.Text field Definition": {
		"prefix": "fields.Text",
		"body": [
				"fields.Text(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:None},",
				"    help=${6:False},",
				"    translate=${7:True},",
				")"
		],
		"description": "Odoo ORM Text Definiton"
	},
	
	"Odoo Fields.Html field Definition": {
		"prefix": "fields.Html",
		"body": [
				"fields.Html(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:None},",
				"    help=${6:False},",
				"    translate=${7:True},",
				")"
		],
		"description": "Odoo ORM Html Definiton"
	},
	
	"Odoo Fields.Integer field Definition": {
		"prefix": "fields.Integer",
		"body": [
				"fields.Char(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:0},",
				"    help=${6:False},",
				")"
		],
		"description": "Odoo ORM Integer Definiton"
	},
	
	"Odoo Fields.Float field Definition": {
		"prefix": "fields.Float",
		"body": [
				"fields.Float(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:0.0},",
				"    digits=(${7:16},${8:2})",
				"    help=${6:False},",
				")"
		],
		"description": "Odoo ORM Float Definiton"
	},
	
	"Odoo Fields.Selection field Definition": {
		"prefix": "fields.Selection",
		"body": [
				"fields.Selection(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:None},",
				"    help=${6:False},",
				"    selection=[",
				"        ('${7:valor1}', '${7:valor1}'),",
				"        ('${8:valor2}', '${8:valor2}'),${9}",
				"    ],",
				")"
		],
		"description": "Odoo ORM Selection Definiton"
	},
	
	"Odoo Fields.One2Many field Definition": {
		"prefix": "fields.One2Many",
		"body": [
				"fields.One2Many(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:None},",
				"    help=${6:False},",
				"    comodel_name='${7:model.name}',",
				"    inverse_name='${8:inverse_field}'",
				"    domain=[${9}],",
				"    context={${10}},",
				"    auto_join=${11:False},",
				"    limit=${12:None},",
				")"
		],
		"description": "Odoo ORM One2Many Definiton"
	},
	
	"Odoo Fields.Many2One field Definition": {
		"prefix": "fields.Many2one",
		"body": [
				"fields.Many2one(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:None},",
				"    help=${6:False},",
				"    comodel_name='${7:model.name}',",
				"    domain=[${8}],",
				"    context={${9}},",
				"    ondelete='${10:restrict}',",
				"    auto_join=${11:False},",
				")"
		],
		"description": "Odoo ORM Many2One Definiton"
	},
	
	"Odoo Fields.Many2many field Definition": {
		"prefix": "fields.Many2many",
		"body": [
				"fields.Many2many(",
				"    string='${1:Field Name}',",
				"    readonly=${3:False},",
				"    help=${4:False},",
				"    comodel_name='${5:model.name}',",
				"    relation='${6:model_name_this_model_rel}',",
				"    column1='${7:model_name_id}',",
				"    column2='${8:this_model_id}',",
				"    domain=[${9}],",
				"    context={${10}},",
				"    limit=None",
				")"
		],
		"description": "Odoo ORM Many2many Definiton"
	},
	
	"Odoo Fields.Boolean field Definition": {
		"prefix": "fields.Boolean",
		"body": [
				"fields.Boolean(",
				"    string='${1:Field Name}',",
				"    required=${2:False},",
				"    readonly=${3:False},",
				"    index=${4:False},",
				"    default=${5:None},",
				"    help=${6:False},"
		],
		"description": "Odoo ORM Boolean Definiton"
	},
	
	
	"Odoo Inherit": {
		"prefix": "odoo_inherit",
		"body": [
				"_inherit = '${super_module_name}'"
		],
		"description": "Odoo Inherit From Module"
	},
	
	"Odoo Name": {
		"prefix": "odoo_name",
		"body": [
				"_name = '${module_name}'"
		],
		"description": "Odoo Module Name"
	},
	
	"Odoo Related": {
		"prefix": "odoo_related",
		"body": [
				", related='${one2many}_id.${parent_field}'"
		],
		"description": "Odoo Related"
	},
	
	"Odoo Create": {
		"prefix": "odoo_create",
		"body": [
				"@api.model",
    			"def create(self, vals):",
				"    ${#To Do Code Here.}"
		],
		"description": "Odoo Create Method using decorator"
	},
	
	"Odoo Write": {
		"prefix": "odoo_write",
		"body": [
				"@api.multi",   
    			"def write(self, vals):",
				"    ${#To Do Code Here.}"
		],
		"description": "Odoo Write Method using decorator"
	},
	
	"Odoo Search": {
		"prefix": "odoo_search",
		"body": [
				"def _search(self, operator, value):",
				"    ${#To Do Code Here.}"
		],
		"description": "Odoo Search Method using decorator"
	},
	
	"Odoo Onchange": {
		"prefix": "odoo_onchange",
		"body": [
				"@api.onchange('${fields}')", 
    			"def _onchange_${field}(self):",
				"    ${#To Do Code Here.}"
		],
		"description": "Odoo Onchange Method using decorator"
	},
	
	"Odoo State": {
		"prefix": "odoo_action_state",
		"body": [
				"@api.multi",
    			"def action_${state}(self):",
				"    ${#To Do Code Here.}"
		],
		"description": "Odoo State Method using decorator"
	},
	
	"Odoo Default": {
		"prefix": "odoo_default",
		"body": [
				", default=${method_name or value}"
		],
		"description": "Odoo default"
	},

	"Odoo Order": {
		"prefix": "odoo_order",
		"body": [
			"_order = '${field_order}', ${field_order2}'"
		],
		"description": "Odoo Order"
	},

	"Odoo self env search": {
		"prefix": "odoo_env_search",
		"body": [
			"${result} = self.env['${module}'].search([('${field}','=', ${value}})])"
		],
		"description": "Odoo Self Environment Search"
	},

	"Odoo self env browse": {
		"prefix": "odoo_env_browse",
		"body": [
            "${result} = self.env['${module}'].browse(${result_id})"
		],
		"description": "Odoo Self Environment Browse"
	},

	"Odoo for in": {
		"prefix": "odoo_for_in",
		"body": [
            "for ${record} in ${result}:",
            "    ${#To Do Code here}"
		],
		"description": "Odoo For In Statement"
	},

	"Odoo ORM required": {
		"prefix": "odoo_required",
		"body": [
            ", required = True"
		],
		"description": "Odoo ORM required"
	},

	"Odoo ORM Super": {
		"prefix": "odoo_super",
		"body": [
            "super(${module}, self)"
		],
		"description": "Odoo ORM Super"
	},

	"Odoo openerp pool": {
		"prefix": "odoo_pool_get",
		"body": [
            "${result} = self.pool.get('${module}')"
		],
		"description": "Odoo pool"
	},

	"Openerp Pool Search": {
		"prefix": "openerp_pool_search",
		"body": [
            "${result} = self.pool.get('${module}').search(cr,uid,[('${field}}','=',${value})])"
		],
		"description": "Odoo pool search"
	},

	"Openerp Pool Browse": {
		"prefix": "openerp_pool_browse",
		"body": [
            "${result} = self.pool.get('${module}').browse(cr,uid,${search_id})"
		],
		"description": "Odoo pool browse"
	},

	"Openerp Pool Read": {
		"prefix": "openerp_pool_read",
		"body": [
            "${result} = self.pool.get('${module}').read(cr, uid, ${search_id}, ['${field list}'])"
		],
		"description": "Odoo pool read"
	}
}
